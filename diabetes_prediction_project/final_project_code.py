# -*- coding: utf-8 -*-
"""FINAL PROJECT CODE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SA4OvirDe3q8DYowf4aw4r9MyuIqUYwx
"""

pip install pip



pip install numpy

pip install -U scikit-learn

# Aim: To predict if a person is diabetic or not

#import the libraries
import pandas as pd

#import dataset
dataset=pd.read_csv("/content/Book1.csv")

dataset.head()

dataset.shape

dataset

dataset.drop(dataset.tail(1).index,inplace=True)

dataset

data_set=dataset

data_set.info()

data_set.isnull().sum()

from sklearn.model_selection import train_test_split
from sklearn.datasets import make_blobs
X, y = make_blobs(n_samples=1000)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)
print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)

X

y

from sklearn.model_selection import train_test_split
training_set, test_set = train_test_split(dataset, test_size = 0.2, random_state = 1)

X_train

X_test

y_train

y_test

from sklearn.ensemble import AdaBoostClassifier
adaboost = AdaBoostClassifier(random_state=96)
adaboost.fit(X_train,y_train)
y_pred = adaboost.predict(X_test)

adaboost.score(X_train,y_train)

adaboost.score(X_test,y_test)

import numpy
actual = numpy.random.binomial(1, 0.9, size = 1000)
predicted = numpy.random.binomial(1, 0.9, size = 1000)
from sklearn import metrics
confusion_matrix = metrics.confusion_matrix(actual, predicted)
cm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [False, True])
import matplotlib.pyplot as plt
cm_display.plot()
plt.show()

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)
accuracy = float(cm.diagonal().sum())/len(y_test)
print("\nAccuracy Of AdaBoost For The Given Dataset : ", accuracy)

from google.colab import drive
drive.mount('/content/drive')